/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.h
 #	source generated by 4D Plugin Wizard
 #	Project : App Store Tools
 #	author : miyako
 #	2017/02/10
 #
 # --------------------------------------------------------------------------------*/

//to get mac address
#import <IOKit/IOKitLib.h>
#import <SystemConfiguration/SCNetworkConfiguration.h>
//to generate sha-1 hash
#import <CommonCrypto/CommonDigest.h>
//to process ASN.1 (without payload.h)
#import <Security/CMSDecoder.h>
#import <Security/SecAsn1Coder.h>
#import <Security/SecAsn1Templates.h>
#import <Security/SecRequirement.h>

// ASN.1 receipt attribute template
typedef struct {
	size_t          length;
	unsigned char   *data;
} ASN1_Data;
typedef struct {
	ASN1_Data type;     // INTEGER
	ASN1_Data version;  // INTEGER
	ASN1_Data value;    // OCTET STRING
} RVNReceiptAttribute;
typedef struct {
	RVNReceiptAttribute **attrs;
} RVNReceiptPayload;
static const SecAsn1Template kReceiptAttributeTemplate[] = {
	{ SEC_ASN1_SEQUENCE, 0, NULL, sizeof(RVNReceiptAttribute) },
	{ SEC_ASN1_INTEGER, offsetof(RVNReceiptAttribute, type), NULL, 0 },
	{ SEC_ASN1_INTEGER, offsetof(RVNReceiptAttribute, version), NULL, 0 },
	{ SEC_ASN1_OCTET_STRING, offsetof(RVNReceiptAttribute, value), NULL, 0 },
	{ 0, 0, NULL, 0 }
};
static const SecAsn1Template kSetOfReceiptAttributeTemplate[] = {
	{ SEC_ASN1_SET_OF, 0, kReceiptAttributeTemplate, sizeof(RVNReceiptPayload) },
	{ 0, 0, NULL, 0 }
};

//the UTI is critical to access the resources folder of the plugin,
//where the Apple Root Certificate is located.
#define THIS_PLUGIN_UTI @"com.4D.4DPlugin.app-store-tools"

// --- Receipt
void RECEIPT_Get_hash(sLONG_PTR *pResult, PackagePtr pParams);

// --- Bundle
void BUNDLE_Get_identifier(sLONG_PTR *pResult, PackagePtr pParams);
void BUNDLE_Get_version(sLONG_PTR *pResult, PackagePtr pParams);

// --- GUID
void GUID_Compute_hash(sLONG_PTR *pResult, PackagePtr pParams);
void GUID_Get_identifier(sLONG_PTR *pResult, PackagePtr pParams);

// --- Exit
void EXIT_173(sLONG_PTR *pResult, PackagePtr pParams);

// --- Receipt
void RECEIPT_Get_identifier(sLONG_PTR *pResult, PackagePtr pParams);
void RECEIPT_Get_opaque(sLONG_PTR *pResult, PackagePtr pParams);
void RECEIPT_Get_version(sLONG_PTR *pResult, PackagePtr pParams);
void RECEIPT_Get_creation_date(sLONG_PTR *pResult, PackagePtr pParams);
void RECEIPT_Get_expiration_date(sLONG_PTR *pResult, PackagePtr pParams);
void RECEIPT_Get_original_version(sLONG_PTR *pResult, PackagePtr pParams);
